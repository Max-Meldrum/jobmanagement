akka {
  log-dead-letters=off
  test.sigar=true


  remote.netty.tcp {
    hostname = "127.0.0.1"
    port = 2552
  }

  actor {
    provider = "cluster"

    serializers {
      java = "akka.serialization.JavaSerializer"
      proto = "runtime.protobuf.ProtobufSerializer"
    }

    // off means that the JavaSerializer won't be allowed at all
    allow-java-serialization = off

    // Set none to disable
    serialization-bindings {
      // All protobuf messages in runtime.common.messages extend GeneratedMessage
      "scalapb.GeneratedMessage" = proto
      // proto messages are case classes, this is to handle dev mistakes
      // i.e., if "Message" is sent instead of "Message()"
      "scalapb.GeneratedMessageCompanion" = proto
    }

  }

  remote {
    log-remote-lifecycle-events = off
  }

  cluster {
    seed-nodes = [
      // Fix this so it isn't hardcoded..
      "akka.tcp://ArcRuntime@127.0.0.1:2551",
      "akka.tcp://ArcRuntime@127.0.0.1:2552"]
    min-nr-of-members = 2
    metrics.enabled=off
    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    #
    auto-down-unreachable-after = 10s

  }
}


akka.cluster.roles = ["resourcemanager"]

// Cluster Metrics
akka.extensions = [ "akka.cluster.metrics.ClusterMetricsExtension" ]

# Sigar native library extract location during tests.
# Note: use per-jvm-instance folder when running multiple jvm on one host.
akka.cluster.metrics.native-library-extract-folder=${user.dir}/target/native/resourcemanager


resourcemanager {

}